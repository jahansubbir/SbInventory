@model SbInventory.Models.SBReceive

@{
    ViewBag.Title = "ReceivePositive";
}

<h2>ReceivePositive</h2>
@if (ViewBag.Message != null)
{
    <div class="animated bounce">
        @ViewBag.Message
    </div>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SB ReceivePositive</h4>
        <hr/>
        @Html.ValidationSummary(true)

        @*<div class="form-group">
            @Html.LabelFor(model => model.DRDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DRDate)
                @Html.ValidationMessageFor(model => model.DRDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DRTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DRTime)
                @Html.ValidationMessageFor(model => model.DRTime)
            </div>
        </div>*@
        <div class="w3-card-4" style="margin-top: 300px; margin-left: 300px; max-width: 600px">
            <div class="form-group">
                @Html.LabelFor(model => model.EID, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EID)
                    @Html.ValidationMessageFor(model => model.EID)
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Remarks, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks)
                    @Html.ValidationMessageFor(model => model.Remarks)
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.SBDSBId, "SBDSBId", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("SBDSBId", String.Empty)
                    @Html.ValidationMessageFor(model => model.SBDSBId)
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DIDId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DIDId)
                    @Html.ValidationMessageFor(model => model.DIDId)
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*<input type="submit" value="Login" class="btn btn-default" />*@
                    <button id="Status" name="Status" value="Positive" class="btn btn-large btn-default">Receive Positive</button>
                    @*<button id="Status" name="Status" value="Nagative">ReceivePositive Negative</button>*@
                </div>
            </div>
        </div>
    </div>
    
    }
        

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
